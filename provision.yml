---

- name: Prepare host for provisioning
  hosts: workshop-hosts
  user: root

  vars_files:
  - config.yml

  tasks:

  - name: Create temporary directory
    action: file dest={{ pxe_dir }} state=directory

  - name: Extract kernel and ramdisk from ISO image
    action: iso_extract image={{ image_dir }}/{{ image_file }} files=images/pxeboot/{{ item }} dest={{ pxe_dir }}/{{ item }}
    with_items:
    - vmlinuz
    - initrd.img

- name: Provision a CentOS system
  hosts: vms
  user: root

  vars_files:
  - config.yml

  gather_facts: false ### The VM doesn't exist yet

  tasks:

  - name: Create temporary directory
    action: file dest={{ pxe_dir }}/virt-{{ inventory_hostname }} state=directory
    delegate_to: "{{ on_host }}"

  - name: Template VM configuration
    action: template src=templates/vm.xml dest={{ pxe_dir }}/virt-{{ inventory_hostname }}/vm.xml
    delegate_to: "{{ on_host }}"

  - name: Allocate storage
    action: qemu_img dest={{ image_dir }}/{{ inventory_hostname }}.img size=3072 format=qcow2
    delegate_to: "{{ on_host }}"

  - name: Create the VM
    action: virt_guest guest={{ inventory_hostname }} src={{ pxe_dir }}/virt-{{ inventory_hostname }}/vm.xml
    delegate_to: "{{ on_host }}"

  - name: Template the kickstart file
    action: template src=templates/centos-6.ks dest={{ web_dir }}/{{ inventory_hostname }}.ks mode=0755
    delegate_to: "{{ on_host }}"

  - name: Direct kernel boot the VM
    action: virt_boot guest={{ inventory_hostname }} kernel={{ pxe_dir }}/vmlinuz initrd={{ pxe_dir }}/initrd.img cmdline='linux sshd ksdevice=eth0 ip={{ ip }} netmask=255.255.255.0 gateway={{ on_host }} ks=http://{{ on_host }}:8000/{{ inventory_hostname }}.ks'
    delegate_to: "{{ on_host }}"

  - name: Wait for the VM to start
    action: wait_for host={{ ip }} port=22 state=started
    delegate_to: "{{ on_host }}"

  - name: Wait for the kickstart to finish
    action: wait_for host={{ ip }} port=22 state=stopped timeout=7200
    delegate_to: "{{ on_host }}"

  - name: Wait for the VM to stop
    local_action: pause seconds=60

  - name: Boot the VM from the hard disk
    action: virt_boot guest={{ inventory_hostname }} boot=hd
    delegate_to: "{{ on_host }}"

  - name: Wait for the VM to boot
    action: wait_for host={{ mgt.ip }} port=22 state=started
    delegate_to: "{{ on_host }}"
